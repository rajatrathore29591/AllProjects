//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TV.CraveASAP.DataModel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class DB_9D9221_eddeeEntities : DbContext
    {
        public DB_9D9221_eddeeEntities()
            : base("name=DB_9D9221_eddeeEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<AdminVendor> AdminVendors { get; set; }
        public DbSet<AppDefaultLandingPage> AppDefaultLandingPages { get; set; }
        public DbSet<Banner> Banners { get; set; }
        public DbSet<Category> Categories { get; set; }
        public DbSet<Configuration> Configurations { get; set; }
        public DbSet<ContentManagement> ContentManagements { get; set; }
        public DbSet<DefaultPromotionCodeBanner> DefaultPromotionCodeBanners { get; set; }
        public DbSet<DynamicHTMLContent> DynamicHTMLContents { get; set; }
        public DbSet<Location> Locations { get; set; }
        public DbSet<OAuth> OAuths { get; set; }
        public DbSet<OpeningHour> OpeningHours { get; set; }
        public DbSet<Point> Points { get; set; }
        public DbSet<PointsConfiguration> PointsConfigurations { get; set; }
        public DbSet<PredictiveNotification> PredictiveNotifications { get; set; }
        public DbSet<Reward> Rewards { get; set; }
        public DbSet<Subscribe> Subscribes { get; set; }
        public DbSet<SuperAdminLogin> SuperAdminLogins { get; set; }
        public DbSet<UserFavourite> UserFavourites { get; set; }
        public DbSet<UserPrefrence> UserPrefrences { get; set; }
        public DbSet<UserReward> UserRewards { get; set; }
        public DbSet<VendorBranch> VendorBranches { get; set; }
        public DbSet<SubCategory> SubCategories { get; set; }
        public DbSet<OptionalCategory> OptionalCategories { get; set; }
        public DbSet<Admin> Admins { get; set; }
        public DbSet<UserPromotion> UserPromotions { get; set; }
        public DbSet<UserPromotionSkip> UserPromotionSkips { get; set; }
        public DbSet<PromotionCode> PromotionCodes { get; set; }
        public DbSet<UserLocation> UserLocations { get; set; }
        public DbSet<User> Users { get; set; }
        public DbSet<Vendor> Vendors { get; set; }
    
        public virtual ObjectResult<usp_Analytics_Result> usp_Analytics(Nullable<int> vendorId, string time, string categoryType, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var vendorIdParameter = vendorId.HasValue ?
                new ObjectParameter("vendorId", vendorId) :
                new ObjectParameter("vendorId", typeof(int));
    
            var timeParameter = time != null ?
                new ObjectParameter("time", time) :
                new ObjectParameter("time", typeof(string));
    
            var categoryTypeParameter = categoryType != null ?
                new ObjectParameter("CategoryType", categoryType) :
                new ObjectParameter("CategoryType", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Analytics_Result>("usp_Analytics", vendorIdParameter, timeParameter, categoryTypeParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<usp_AnalyticsByVendorID_Result> usp_AnalyticsByVendorID(Nullable<int> vendorID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("vendorID", vendorID) :
                new ObjectParameter("vendorID", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AnalyticsByVendorID_Result>("usp_AnalyticsByVendorID", vendorIDParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<usp_AnalyticsPromotion_Result> usp_AnalyticsPromotion()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AnalyticsPromotion_Result>("usp_AnalyticsPromotion");
        }
    
        public virtual ObjectResult<usp_AnalyticsSocialMedia_Result> usp_AnalyticsSocialMedia()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AnalyticsSocialMedia_Result>("usp_AnalyticsSocialMedia");
        }
    
        public virtual ObjectResult<usp_AnalyticsTrackUsage_Result> usp_AnalyticsTrackUsage()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AnalyticsTrackUsage_Result>("usp_AnalyticsTrackUsage");
        }
    
        public virtual int usp_AnalyticsUsagePerDay()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AnalyticsUsagePerDay");
        }
    
        public virtual ObjectResult<usp_AnalyticsUserPerDayUseCategory_Result> usp_AnalyticsUserPerDayUseCategory()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AnalyticsUserPerDayUseCategory_Result>("usp_AnalyticsUserPerDayUseCategory");
        }
    }
}
